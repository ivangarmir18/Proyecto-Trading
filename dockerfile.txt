# Dockerfile - multienv entrypoint for Streamlit UI or FastAPI API
# Based on slim Python. Optimizado para tama√±o / reproducibilidad.
FROM python:3.11-slim

# Prevent python from writing .pyc files and buffer stdout/stderr
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=1
ENV PORT=8000

# Install system deps required by some python packages (kept minimal)
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
       build-essential \
       git \
       curl \
       ca-certificates \
       libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app user early
RUN useradd --create-home --shell /bin/bash appuser

WORKDIR /app

# Copy only requirements first (caching)
COPY requirements.txt /app/requirements.txt

# Upgrade pip, install requirements
RUN python -m pip install --upgrade pip setuptools wheel \
    && if [ -s /app/requirements.txt ]; then pip install -r /app/requirements.txt; fi

# Copy the rest of the app
COPY . /app

# Ensure start script present and executable (copied above)
COPY start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Fix permissions and switch to non-root user
RUN chown -R appuser:appuser /app
USER appuser

# Expose default port (Render / Docker will map $PORT)
EXPOSE 8000

# Default entry: start.sh decides what to run based on $SERVICE (web/api)
CMD ["bash", "start.sh"]
